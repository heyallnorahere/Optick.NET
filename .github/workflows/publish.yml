name: publish
on: [ push ] # todo: change to "tag" or something
jobs:
    artifacts:
        runs-on: ${{ matrix.os-name }}-latest
        strategy:
            matrix:
                os-name:
                    - windows
                    - ubuntu
                    - macos
        steps:
            - name: checkout
              uses: actions/checkout@v2
            - name: setup dotnet
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: 7.x.x
            - name: install vulkan (linux)
              shell: bash
              if: ${{ matrix.os-name == 'ubuntu' }}
              run: |
                sudo apt-get update
                sudo apt-get install -y libvulkan-dev
            - name: install vulkan (macos)
              shell: bash
              if: ${{ matrix.os-name == 'macos' }}
              run: |
                SDK_VERSION="1.3.250.1"
                curl -sSL https://sdk.lunarg.com/sdk/download/$SDK_VERSION/mac/vulkansdk-macos-$SDK_VERSION.dmg -o vulkansdk-macos-$SDK_VERSION.dmg
                sudo hdiutil attach vulkansdk-macos-$SDK_VERSION.dmg
                sudo /Volumes/vulkansdk-macos-$SDK_VERSION/InstallVulkan.app/Contents/MacOS/InstallVulkan in --al -c
                echo "VULKAN_SDK=$HOME/VulkanSDK/$SDK_VERSION/macOS" >> "$GITHUB_ENV"
            - name: install vulkan (windows)
              shell: powershell
              if: ${{ matrix.os-name == 'windows' }}
              run: |
                Set-Variable -Name "SDK_VERSION" -Value "1.3.250.1"
                Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/$SDK_VERSION/windows/VulkanSDK-$SDK_VERSION-Installer.exe" -OutFile VulkanSDK.exe
                $installer = Start-Process -FilePath VulkanSDK.exe -Wait -PassThru -ArgumentList @("/S");
                $installer.WaitForExit();
            - name: pull optick
              shell: bash
              run: git clone --branch fix-vulkan --recursive https://github.com/qbojj/optick.git  
            - name: build optick!
              shell: bash
              run: |
                dotnet build -c Release
                dotnet Optick.NET.RedistBuilder/bin/Release/net7.0/Optick.NET.RedistBuilder.dll build-artifact
            - name: push artifact
              uses: actions/upload-artifact@v3
              with:
                name: artifact-${{ matrix.os-name }}
                path: artifacts/artifact-*.zip